{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/CommonUtility.ts","webpack:///./src/BabylonUtility.ts","webpack:///./src/UpdateTextNodeWorker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","CommonUtility","getRandomBoolean","Math","random","getRandomNumberInRange","min","max","digits","rate","pow","getRandomIntInRange","floor","getRandomInt","getRandomNegativeInt","getRandomNegativeNumber","getRandomNumber","digitsOnInt","digitsOnFloat","result","round","sort","array","func","a","b","shuffle","temporaryValue","randomIndex","currentIndex","length","BabylonUtility","distanceVector","v1","v2","dx","x","dy","y","dz","z","sqrt","addVector","BABYLON","Vector3","subtractVector","getRandomVector3","randomOnX","randomOnY","randomOnZ","_CommonUtility__WEBPACK_IMPORTED_MODULE_0__","normalize","updatePosition","position","translateVector","scale","positionToString","map","k","toFixed","join","getLineToEachOther","points","lines","forEach","from","iOfFrom","to","iOfTo","distance","key","push","self","onmessage","message","textNodes","data","_BabylonUtility__WEBPACK_IMPORTED_MODULE_1__","linesToDraw","filter","slice","postMessage","undefined"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAjB,GACAY,OAAAC,eAAAb,EAAA,cAAiDkB,OAAA,KAIjDpB,EAAAqB,EAAA,SAAAlB,GACA,IAAAS,EAAAT,KAAAmB,WACA,WAA2B,OAAAnB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDxB,EAAA2B,EAAA,GAIA3B,IAAA4B,EAAA,mCClEA5B,EAAAU,EAAAmB,EAAA,sBAAAC,IAAA,IAAAA,EAAA,oBAAAA,KAmEA,OAjEWA,EAAAC,iBAAP,WACI,OAAOC,KAAKC,UAAY,IAIrBH,EAAAI,uBAAP,SAA8BC,EAAaC,EAAaC,GACpD,IAAMC,EAAON,KAAKO,IAAI,GAAIF,GAC1B,OAAOP,EAAcU,oBAAoBL,EAAMG,EAAMF,EAAME,GAAQA,GAGhER,EAAAU,oBAAP,SAA2BL,EAAaC,GACpC,OAAOJ,KAAKS,MAAMT,KAAKC,UAAYG,EAAMD,EAAM,IAAMA,GAGlDL,EAAAY,aAAP,SAAoBL,GAChB,IAAMlB,EAAIW,EAAcC,mBAAqB,GAAK,EAClD,OAAOD,EAAca,qBAAqBN,GAAUlB,GAGjDW,EAAAa,qBAAP,SAA4BN,GACxB,OAAOP,EAAcc,wBAAwBP,IAG1CP,EAAAe,gBAAP,SAAuBC,EAAsBC,GACzC,IAAM5B,EAAIW,EAAcC,mBAAqB,GAAK,EAClD,OAAOD,EAAcc,wBAAwBE,EAAaC,GAAiB5B,GAGxEW,EAAAc,wBAAP,SAA+BE,EAAsBC,GACjDD,EAAcA,GAAe,EAC7BC,EAAgBA,GAAiB,EACjC,IAAIC,EAAShB,KAAKiB,MAAMjB,KAAKC,SAAWD,KAAKO,IAAI,GAAIO,EAAcC,IAEnE,OADsB,IAAlBA,IAAqBC,GAAkBhB,KAAKO,IAAI,GAAIQ,IACjDC,GAIJlB,EAAAoB,KAAP,SAAeC,EAAYC,GAIvB,OAHAD,EAAMD,KAAK,SAACG,EAAGC,GACX,OAAOF,EAAKC,GAAKD,EAAKE,KAEnBH,GAGJrB,EAAAyB,QAAP,SAAkBJ,GAMd,IALA,IACIK,EACAC,EAFAC,EAAeP,EAAMQ,OAKlB,IAAMD,GAGTD,EAAczB,KAAKS,MAAMT,KAAKC,SAAWyB,GAIzCF,EAAiBL,EAHjBO,GAAgB,GAIhBP,EAAMO,GAAgBP,EAAMM,GAC5BN,EAAMM,GAAeD,EAGzB,OAAOL,GAGfrB,EAnEA,4ECCA8B,EAAA,oBAAAA,KAsEA,OAnEWA,EAAAC,eAAP,SAAsBC,EAAqBC,GACvC,IAAIC,EAAKF,EAAGG,EAAIF,EAAGE,EACfC,EAAKJ,EAAGK,EAAIJ,EAAGI,EACfC,EAAKN,EAAGO,EAAIN,EAAGM,EAEnB,OAAOrC,KAAKsC,KAAKN,EAAKA,EAAKE,EAAKA,EAAKE,EAAKA,IAGvCR,EAAAW,UAAP,SAAiBT,EAAqBC,GAClC,OAAO,IAAIS,QAAQC,QACfX,EAAGG,EAAIF,EAAGE,EACVH,EAAGK,EAAIJ,EAAGI,EACVL,EAAGO,EAAIN,EAAGM,IAIXT,EAAAc,eAAP,SAAsBZ,EAAqBC,GACvC,OAAO,IAAIS,QAAQC,QACfX,EAAGG,EAAIF,EAAGE,EACVH,EAAGK,EAAIJ,EAAGI,EACVL,EAAGO,EAAIN,EAAGM,IAIXT,EAAAe,iBAAP,SAAwBC,EAAkBC,EAAkBC,GACxD,YADoB,IAAAF,OAAA,QAAkB,IAAAC,OAAA,QAAkB,IAAAC,OAAA,GACjD,IAAIN,QAAQC,QACfG,EAAYG,EAAA,EAAcrC,eAAiB,EAC3CmC,EAAYE,EAAA,EAAcrC,eAAiB,EAC3CoC,EAAYC,EAAA,EAAcrC,eAAiB,GAC7CsC,aAICpB,EAAAqB,eAAP,SAAsBC,EAA2BC,EAAkCC,GAC/EF,EAASjB,GAAMkB,EAAgBlB,EAAImB,EACnCF,EAASf,GAAMgB,EAAgBhB,EAAIiB,EACnCF,EAASb,GAAMc,EAAgBd,EAAIe,GAIhCxB,EAAAyB,iBAAP,SAAwBH,GAIpB,OAHmB,IAAK,IAAK,KAAKI,IAAI,SAAAC,GAClC,OAAOL,EAASK,GAAGC,QAAQ,KAEdC,KAAK,OAInB7B,EAAA8B,mBAAP,SAA0BC,GAEtB,IAAMC,KAeN,OAdAD,EAAOE,QAAQ,SAACC,EAAMC,GAClBJ,EAAOE,QAAQ,SAACG,EAAIC,GAChB,GAAIF,EAAUE,EAAO,CACjB,IAAMC,EAAWtC,EAAeC,eAAeiC,EAAME,GAC/CG,EAASJ,EAAO,IAAIE,EAC1BL,EAAMQ,MACFD,IAAKA,EACLL,KAAMA,EACNE,GAAIA,EACJE,SAAUA,SAKnBN,GAEfhC,EAtEA,8DCCAyC,KAAKC,UAAY,SAAUC,GACvB,IAAMC,EAAYD,EAAQE,KACpBb,EAAQc,EAAA,EAAehB,mBAAmBc,GAM1CG,EALgB5B,EAAA,EACjB7B,KAAK0C,EAAO,SAAAvF,GAAK,OAAAA,EAAE6F,WACnBU,OAAO,SAAAvG,GAAK,OAAAA,EAAE6F,SAAW,KACzBW,MAAM,EAAG,MAEoBvB,IAAI,SAAAjF,GAAK,OAACA,EAAEyF,KAAMzF,EAAE2F,MAItDc,YAAYH,OAAaI","file":"UpdateTextNodeWorker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","\nexport class CommonUtility {\n\n    static getRandomBoolean() {\n        return Math.random() >= 0.5;\n    };\n\n\n    static getRandomNumberInRange(min: number, max: number, digits: number) {\n        const rate = Math.pow(10, digits);\n        return CommonUtility.getRandomIntInRange(min * rate, max * rate) / rate;\n    };\n\n    static getRandomIntInRange(min: number, max: number) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    };\n\n    static getRandomInt(digits?: number) {\n        const r = CommonUtility.getRandomBoolean() ? 1 : -1;\n        return CommonUtility.getRandomNegativeInt(digits) * r;\n    };\n\n    static getRandomNegativeInt(digits?: number) {\n        return CommonUtility.getRandomNegativeNumber(digits);\n    };\n\n    static getRandomNumber(digitsOnInt?: number, digitsOnFloat?: number) {\n        const r = CommonUtility.getRandomBoolean() ? 1 : -1;\n        return CommonUtility.getRandomNegativeNumber(digitsOnInt, digitsOnFloat) * r;\n    };\n\n    static getRandomNegativeNumber(digitsOnInt?: number, digitsOnFloat?: number) {\n        digitsOnInt = digitsOnInt || 1;\n        digitsOnFloat = digitsOnFloat || 0\n        let result = Math.round(Math.random() * Math.pow(10, digitsOnInt + digitsOnFloat));\n        if (digitsOnFloat !== 0) result = result / Math.pow(10, digitsOnFloat);\n        return result;\n    };\n\n\n    static sort<T>(array: T[], func: (e: T) => number) {\n        array.sort((a, b) => {\n            return func(a) - func(b);\n        });\n        return array;\n    };\n\n    static shuffle<T>(array: T[]) {\n        let currentIndex = array.length;\n        let temporaryValue;\n        let randomIndex;\n\n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            // And swap it with the current element.\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    }\n\n};","import { CommonUtility } from './CommonUtility';\n\nexport class BabylonUtility {\n\n\n    static distanceVector(v1: BABYLON.Vector3, v2: BABYLON.Vector3) {\n        var dx = v1.x - v2.x;\n        var dy = v1.y - v2.y;\n        var dz = v1.z - v2.z;\n\n        return Math.sqrt(dx * dx + dy * dy + dz * dz);\n    };\n\n    static addVector(v1: BABYLON.Vector3, v2: BABYLON.Vector3) {\n        return new BABYLON.Vector3(\n            v1.x + v2.x,\n            v1.y + v2.y,\n            v1.z + v2.z\n        );\n    };\n\n    static subtractVector(v1: BABYLON.Vector3, v2: BABYLON.Vector3) {\n        return new BABYLON.Vector3(\n            v1.x - v2.x,\n            v1.y - v2.y,\n            v1.z - v2.z\n        );\n    };\n    \n    static getRandomVector3(randomOnX = true, randomOnY = true, randomOnZ = true) {\n        return new BABYLON.Vector3(\n            randomOnX ? CommonUtility.getRandomInt() : 0,\n            randomOnY ? CommonUtility.getRandomInt() : 0,\n            randomOnZ ? CommonUtility.getRandomInt() : 0\n        ).normalize();\n    };\n\n\n    static updatePosition(position: BABYLON.Vector3, translateVector: BABYLON.Vector3, scale: number) {\n        position.x += (translateVector.x * scale);\n        position.y += (translateVector.y * scale);\n        position.z += (translateVector.z * scale);\n    };\n\n\n    static positionToString(position: BABYLON.Vector3) {\n        const positions = ['x', 'y', 'z'].map(k => {\n            return position[k].toFixed(2);\n        });\n        return positions.join(', ');\n    };\n\n\n    static getLineToEachOther(points: BABYLON.Vector3[]) {\n\n        const lines: Line[] = [];\n        points.forEach((from, iOfFrom) => {\n            points.forEach((to, iOfTo) => {\n                if (iOfFrom < iOfTo) {\n                    const distance = BabylonUtility.distanceVector(from, to);\n                    const key = `${iOfFrom}-${iOfTo}`;\n                    lines.push({\n                        key: key,\n                        from: from,\n                        to: to,\n                        distance: distance\n                    });\n                }\n            });\n        });\n        return lines;\n    };\n};\n\n\nexport interface Line {\n    key: string,\n    from: BABYLON.Vector3,\n    to: BABYLON.Vector3,\n    distance: number\n};","import { CommonUtility } from './CommonUtility';\nimport { BabylonUtility, Line } from './BabylonUtility';\n\nself.onmessage = function (message) {\n    const textNodes = message.data\n    const lines = BabylonUtility.getLineToEachOther(textNodes);\n    const linesToSelect = CommonUtility\n        .sort(lines, l => l.distance)\n        .filter(l => l.distance > 0.2)\n        .slice(0, 1200);\n\n    const linesToDraw = linesToSelect.map(l => [l.from, l.to]);\n    //.shuffle(linesToSelect)\n    //.slice(0, 900)\n\n    postMessage(linesToDraw, undefined);\n};"],"sourceRoot":""}